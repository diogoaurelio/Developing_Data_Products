head(mtcars)
sapply(mtcars,function(x) colMeans(x[,c("cyl","hp")], na.rm = TRUE))
colMeans(mtcars,2)
colMeans(mtcars$cyl,2)
colMeans(mtcars[,c('cyl','hp')],2)
sapply(mtcars,colMeans(mtcars[,c("cyl","hp")], na.rm = TRUE))
sapply(mtcars,function(x) colMeans(x[,c("cyl","hp")], na.rm = TRUE))
x1 = mtcars[,"cyl"] == "4"
x2 = mtcars[x1,'hp']
x2[is.na(x1)] = F
y1 = mtcars[,"cyl"] == "8"
y2 <- mtcars[y,'hp']
y2[is.na(y)] = F
sapply(y2, mean)
mean(y2)
y2[is.na(y2)] = F
mean(y2)
x1 = mtcars[,"cyl"] == "4"
x2 = mtcars[x1,'hp']
x2[is.na(x2)] = F
y1 = mtcars[,"cyl"] == "8"
y2 <- mtcars[y,'hp']
y2[is.na(y2)] = F
mean(y2) - mean(x2)
dnorm(x, mean = 0, sd = 1, log = FALSE)
x <- rnorm(10)
x
dnorm(x, mean = 0, sd = 1, log = FALSE)
x <- rnorm(10, 20, 2)
x
summary(x)
set.seed(1)
rnorm(5)
rnorm(5)
set.seed(1)
rnorm(5)
rnorm(5)
rnorm(5)
set.seed(2)
rnorm(5)
set.seed(1)
rnorm(5)
set.seed(2)
rnorm(5)
str(set.seed())
str(set.seed(5))
rpois(10,1)
rpois(10,2)
rpois(10,20)
ppois(2,2)
ppois(4,2)
ppois(2,2)
ppois(6,2)
set.seed(20=)
set.seed(20)
x <- rnorm(100)
e<.rnorm(100,0,2)
y <- 0,5 + 2*x + e
e<- rnorm(100,0,2)
y <- 0,5 + 2*x + e
y <- 0.5 + 2*x + e
summary(y)
plot(x,y)
set.seed(1)
rpois(5,2)
set.seed(10)
x <- rbinom(10,10,0.5)
e <. rnorm(10,0,20)
e <- rnorm(10,0,20)
y <- 0.5 + 2*x + e
x
library(datasets)
Rprof()
fit <- lm(y~ x1 + x2)
library(swirl)
install.packages('swirl')
getwd()
library(swirl)
swirl()
5+7
x <- 5+7
x
x-3
y<- x-3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?
c()
?c()
?c
z
vnew <- c(z,555,z)
c(z,555,z)
z*2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4)+c(0,10,100)
c(1,2,3,4)+c(0,10,1000)
z*2 + 1000
my_div
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10, by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
c(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char("My","name","is")
my_char <- c("My","name","is")
print(my_char)
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Diego")
my_name
paste(my_char, "Diego", collapse= " ")
paste(my_name, collapse= " ")
paste("Hello","World!", sep=" ")
paste("Hello","World", sep=" ")
paste("Hello","world!", sep=" ")
paste(1:3, c("X", "Y", "Z"), sep=" ")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep="-")
x <- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na == TRUE)
sum(my_na)
my_data
0/0
Inf/Inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x > 0]
x[!is.na(x) & x >0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
naes(vect)
names(vect)
vect2 <- c(11,2,NA)
names(vect2)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vect <- 1:20
my_vector <- 1:20
my_vect
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(nrow=4, ncol=5)
my_matrix2 <- matrix(data=1:20, nrow=4, ncol=5)
my_matrix2
identical(my_matrix,my_matrix2)
patients <- c("Bill", "GIna", "Kina", "Sean")
patients <- c("Bill", "Gina", "Kina", "Sean")
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbin(patients, my_matrix)
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
colnames(cnames, my_data)
colnames(my_data, cnames)
classes(my_data)
class(my_data)
colnames(mydata) <- cnames
colnames(my_data) <- cnames
my_data
swirl()
swirl()
getwd()
25!
fact(25)
factorial(25)
library(chron) #To work with Time
file1 <- "./household_power_consumption.txt"
###Initial Study the data
#initial <- read.table(file1, nrows=100)
#classes <- sapply(initial,class)
#myData <- read.table(file1, header=T, sep=";", stringsAsFactors=F, nrow=5, colClasses=classes)
data <- read.table(file1, header=T, sep=";", stringsAsFactors=F, na.strings="?", nrow=5
)
myData <- read.table(file1, header=T, sep=";", stringsAsFactors=F, na.strings="?")
#Reformating dates
#myData$Date <- as.Date(myData$Date, "%d %m %Y") #did not work
dateString <- myData$Date
myData$Date <- strptime(dateString, "%d/%m/%Y"); myData$Time <- chron(times=myData$Time)
#myData <- subset(myData, myData$Data =="01-02-2007" | myData$Data =="02-02-2007")
#y <- subset(data, Date =="2006-12-16")
z <- subset(myData, myData$Data =="2007-02-01" | myData$Data =="2007-02-02")
library(chron) #To work with Time
file1 <- "./household_power_consumption.txt"
myData <- read.table(file1, header=T, sep=";", stringsAsFactors=F, na.strings="?")
getwd()
setwd("./Documents/Developer/R/Exp_Analysis_Course/")
myData <- read.table(file1, header=T, sep=";", stringsAsFactors=F, na.strings="?")
setwd("./Assignment 1/")
myData <- read.table(file1, header=T, sep=";", stringsAsFactors=F, na.strings="?")
dateString <- myData$Date
myData$Date <- strptime(dateString, "%d/%m/%Y"); myData$Time <- chron(times=myData$Time)
str(myData)
z <- subset(myData, myData$Data =="2007-02-01" | myData$Data =="2007-02-02")
str(z)
head(myData)
z <- subset(myData, myData$Data =="2007-02-01")
z <- subset(myData, myData$Data >="2007-02-01" | myData$Data <="2007-02-02")
z
z <- subset(myData, Date >="2007-02-01" | Date <="2007-02-02")
nrow(z)
nrow(myData)
cleanData <- subset(myData, Date >= "2007-02-01" & Date <= "2007-02-02")
rm(z)
str(cleanData)
head(cleanData)
head(cleanData)
hist(cleanData$Global_active_power)
hist(cleanData$Global_active_power, col="red")
hist(cleanData$Global_active_power, col="red", main="Global Active Power")
hist(cleanData$Global_active_power, col="red", xlab="Global Active Power (kilowatts)", main="Global Active Power")
hist(cleanData$Global_active_power, col="red", xlab="Global Active Power (kilowatts)", main="Global Active Power")
if(!file.exists("plot1.png")) { dev.copy(png, file="plot1.png", height=480, width=480); dev.off() }
if(!file.exists("plot1v2.png")) { dev.copy(png, file="plot1v2.png", height=480, width=480); dev.off() }
?plot
plot(cleanData$Time, cleanData$Global_active_power, type="l")
c <- cleanData
a <- c$Time
format(a[1], "%a %b %d")
format(a, "%a %b %d")
head(a)
a <- c$Date
format(a, "%a %b %d")
d <- subset(a, day =="Thu" | day =="Fri" | day == "Sat" )
a$Day <- format(a, "%a %b %d")
head(a)
str(a)
c <- cleanData
a <- c$Date
c$Day <- format(a, "%a %b %d")
str(c)
c <- cleanData
a <- c$Date
c$Day <- format(a, "%a")
str(c)
c <- cleanData
a <- c$Date
c$Day <- format(a, "%a")
d <- c
c <- subset(c, day =="Thu" | day =="Fri" | day == "Sat" )
c <- subset(c, Day =="Thu" | Day =="Fri" | Day == "Sat" )
plot(c$Time, c$Global_active_power, xlab="Global Active Power (kilowatts)", type="l")
plot(c$Day, c$Global_active_power, xlab="Global Active Power (kilowatts)", type="l")
c <- subset(c, Day =="Thu" | Day =="Fri" | Day == "Sat" )
head(c)
plot(c$Day, c$Global_active_power, xlab="Global Active Power (kilowatts)", type="l") #Type for lines
c <- cleanData
a <- c$Date
c$Day <- format(a, "%a %b %d")
d <- c
c <- subset(c, Day =="Thu" | Day =="Fri" | Day == "Sat" )
plot(c$Day, c$Global_active_power, xlab="Global Active Power (kilowatts)", type="l")
c <- cleanData
a <- c$Date
c$Day <- format(a, "%a")
c$Date <- format(a, "%a %b %d")
d <- c
c <- subset(c, Day =="Thu" | Day =="Fri" | Day == "Sat" )
plot(c$Date, c$Global_active_power, xlab="Global Active Power (kilowatts)", type="l")
nrow(c)
nrow(cleanData)
c <- subset(c, Day =="Thu" | Day =="Fri" | Day == "Sat" )
nrow(c)
c <- subset(c, Day =="Thu" & Day =="Fri" & Day == "Sat" )
nrow(c)
c <- cleanData
c$Day <- format(a, "%a")
head(c)
str(c)
factors(c$Day)
factor(c$Day)
c$newTime <- paste(c$Date, c$Time, sep=" ")
c$newTime
plot(c$newTime, c$Global_active_power, xlab="Global Active Power (kilowatts)", type="l")
c$newTime <- paste(c$Date, c$Time, sep=" ")
c$newTime <- as.POSIXct(c$newTime)
plot(c$newTime, c$Global_active_power, xlab="Global Active Power (kilowatts)", type="l")
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", type="l")
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="" type="l")
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l")
head(c)
plot(c$newTime, c$Sub_metering_1, ylab="Energy sub metering", xlab="", type="l")
plot(c$newTime, c$Sub_metering_2, ylab="Energy sub metering", xlab="", type="l", col="red")
?lines
plot(c$newTime, c$Sub_metering_1, ylab="Energy sub metering", xlab="", type="l") #Type for lines
lines(c$Sub_metering_2, type="l", col="red")
with(c, plot(newTime, Sub_metering_1, ylab="Energy sub metering", xlab="", type="l"))
with(c, lines(newTime, Sub_metering_2, col="red", type="l"))
with(c, plot(newTime, Sub_metering_1, ylab="Energy sub metering", xlab="", type="l"))
with(c, lines(newTime, Sub_metering_2, col="red", type="l"))
with(c, lines(newTime, Sub_metering_3, col="blue", type="l"))
legend("topright", pch=1 col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=1, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=2, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=3, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=4, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=5, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=6, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=7, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=8, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=9, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=10, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=11, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=12, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=13, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=14, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=15, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=16, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=17, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=18, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=19, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=20, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=21, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=22, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=23, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=24, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=25, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=26, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=26, col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", col=c("black","red","blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", pch=2, col=c("black","red","blue"), lty=1, lwd=2, legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", col=c("black","red","blue"), lty=1, lwd=2, legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
par(mfrow= c(2,2))
with(c, plot(newTime, Sub_metering_1, ylab="Energy sub metering", xlab="", type="l"))
with(c, lines(newTime, Sub_metering_2, col="red", type="l"))
with(c, lines(newTime, Sub_metering_3, col="blue", type="l"))
legend("topright", col=c("black","red","blue"), lty=1, lwd=2, legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
par(mfrow= c(2,2))
with(c, {
plot(newTime, Sub_metering_1, ylab="Energy sub metering", xlab="", type="l"))
lines(newTime, Sub_metering_2, col="red", type="l"))
lines(newTime, Sub_metering_3, col="blue", type="l"))
legend("topright", col=c("black","red","blue"), lty=1, lwd=2, legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
}
par(mfrow= c(2,2))
with(c, {
plot(newTime, Sub_metering_1, ylab="Energy sub metering", xlab="", type="l"))
lines(newTime, Sub_metering_2, col="red", type="l"))
lines(newTime, Sub_metering_3, col="blue", type="l"))
}
legend("topright", col=c("black","red","blue"), lty=1, lwd=2, legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
par(mfrow= c(2,2), mar= c(4,4,2,1))
par(mfrow= c(2,2), mar= c(4,4,2,1))
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
par(mfrow= c(2,2), mar= c(4,4,4,4))
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
par(mfrow= c(2,2), mar= c(4,4,1,1))
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
par(mfrow= c(2,2), mar= c(3,4,1,1))
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
par(mfrow= c(2,2), mar= c(2,4,1,1))
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
par(mfrow= c(2,2), mar= c(2,2,1,1))
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
par(mfrow= c(2,2), mar= c(2,3,1,1))
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
par(mfrow= c(2,2), mar= c(2,4,1,1))
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
par(mfrow= c(2,2), mar= c(2,4,1,1), oma=c(0,0,2,0))
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
par(mfrow= c(2,2), mar= c(2,4,2,1), oma=c(0,0,2,0))
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
par(mfrow= c(2,2), mar= c(2,4,1,1), oma=c(0,0,2,0))
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
head(c)
par(mfrow= c(2,2), mar= c(2,4,1,1), oma=c(0,0,2,0))
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Voltage, ylab="Voltage", xlab="datetime", type="l")
par(mfrow= c(2,2), mar= c(2,4,1,1), oma=c(0,0,2,0))
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Voltage, ylab="Voltage", xlab="datetime", type="l")
with(c, plot(newTime, Sub_metering_1, ylab="Energy sub metering", xlab="", type="l"))
with(c, lines(newTime, Sub_metering_2, col="red", type="l"))
with(c, lines(newTime, Sub_metering_3, col="blue", type="l"))
legend("topright", col=c("black","red","blue"), lty=1, lwd=2, legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
plot(c$newTime, c$Global_reactive_power, ylab="Global_reactive_power", xlab="datetime", type="l")
par(mfrow= c(2,2), mar= c(2,4,1,1), oma=c(0,0,2,0))
plot(c$newTime, c$Global_active_power, ylab="Global Active Power (kilowatts)", xlab="", type="l") #Type for lines
plot(c$newTime, c$Voltage, ylab="Voltage", xlab="datetime", type="l")
with(c, plot(newTime, Sub_metering_1, ylab="Energy sub metering", xlab="", type="l"))
with(c, lines(newTime, Sub_metering_2, col="red", type="l"))
with(c, lines(newTime, Sub_metering_3, col="blue", type="l"))
legend("topright", col=c("black","red","blue"), lty=1, lwd=2, bty="n", cex=0.5, legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
plot(c$newTime, c$Global_reactive_power, ylab="Global_reactive_power", xlab="datetime", type="l")
rm(c)
rm(cleanData)
rm(myData)
rm(a)
rm(d)
rm(dateString)
rm(file1)
install.packages("shiny")
library(shiny)
setwd("~/Documents/Developer/R/Developing_Data_Products/")
getwd()
dir()
runApp()
runApp()
runApp()
dir()
setwd("./Week1/")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
x <- 0
runApp()
runApp()
runApp()
library(renderText)
install.packages("renderText")
runApp()
x <- 0
runApp()
x <- 0
runApp()
x <- 0
runApp()
x <- 0
runApp()
x <- 0
runApp()
runApp()
runApp()
